server:
  port: 80

mybatis:
  mapper-locations: classpath:/mapper/**/*.xml

spring:

  # devtools
  devtools:
    restart:
      enabled: true
      # 设置重启的目录，添加那个目录的文件需要restart
      additional-paths: src/main/java
      # 默认配置下,热部署后总是报404
      poll-interval: 3000ms
      quiet-period: 2999ms

  # datasource
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://116.62.162.47:3306/spring.boot.starter
    username: root
    password: Hhsrv587..
    hikari:
      minimum-idle: 1
      connection-test-query: select 1

  # shardingsphere
  # spring.shardingsphere.datasource -> java.util.Map<String, java.util.Map<String, Object>>
  shardingsphere:
    datasource:
      names: ds
      # java.util.Map<String, java.util.Map<String, Object>>
      ds:
        # java.lang.Object
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://116.62.162.47:3306/spring.boot.starter
        username: root
        password: Hhsrv587..
    # spring.shardingsphere.sharding.tables -> java.util.Map<String, org.apache.shardingsphere.core.yaml.config.sharding.YamlTableRuleConfiguration>
    sharding:
      tables:
        t_order:
          # org.apache.shardingsphere.core.yaml.config.sharding.YamlTableRuleConfiguration
          logic-table: t_order
          actual-data-nodes: ds.t_order$->{0..1}
          table-strategy:
            # org.apache.shardingsphere.core.yaml.config.sharding.strategy.YamlStandardShardingStrategyConfiguration
            standard:
              sharding-column: shard
              precise-algorithm-class-name: com.mrathena.dao.algorithm.MonthlyShardingAlgorithm
              range-algorithm-class-name: com.mrathena.dao.algorithm.MonthlyShardingAlgorithm
    # spring.shardingsphere.props -> java.util.Map<String, String>
    props:
      sql:
        show: true

  # redis
  redis:
    password: Hhsrv587..
    database: 0
    lettuce:
      pool:
        min-idle: 1
        # spring.redis.lettuce.pool.max-wait -> java.time.Duration, redis连接池耗尽后再次请求连接到报错提示的最大等待时间
        max-wait: 1s
    # cluster mode
    # todo 这里有个问题,阿里云redis集群配置都是使用的公网,虽然能成功获取连接执行命令,但是会报[Unable to connect to 172.16.138.202:26385]这种错误,这个ip是我的内网ip...
    cluster:
      max-redirects: 3
      nodes:
        - 116.62.162.47:26381
        - 116.62.162.47:26382
        - 116.62.162.47:26383
        - 116.62.162.47:26384
        - 116.62.162.47:26385
        - 116.62.162.47:26386
    # sentinel mode
#    sentinel:
#      master: mymaster
#      nodes:
#        - 116.62.162.47:16579
#        - 116.62.162.47:16580
#        - 116.62.162.47:16581
    # standalone mode
#    host: 116.62.162.47
#    port: 6379



